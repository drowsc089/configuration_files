input {
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-attendance"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-attendance"]
	type => "idr-attendance" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-apartment"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-apartment"]
	type => "idr-apartment" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-dfs"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-dfs"]
	type => "idr-dfs" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-gateway"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-gateway"]
	type => "idr-gateway" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-sign"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-sign"]
	type => "idr-sign" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-record"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-record"]
	type => "idr-record" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-zuul"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-zuul"]
	type => "idr-zuul" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-user"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-user"]
	type => "idr-user" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-device"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-device"]
	type => "idr-device" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-zipkin"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-zipkin"]
	type => "idr-zipkin" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr-eureka"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["idr-eureka"]
	type => "idr-eureka" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_mms-sync"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["mms-sync"]
	type => "mms-sync" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_mms-admin"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["mms-admin"]
	type => "mms-admin" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_meet-test"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["meet-test"]
	type => "meet-test" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_xmas-html-test"
	codec => "plain"
	fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
	topics => ["xmas-html-test"]
	type => "xmas-html-test" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_hd-material-h5"
        codec => "plain"
        fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
        topics => ["hd-material-h5"]
        type => "hd-material-h5"
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_mt"
        codec => "plain"
        fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
        topics => ["mt"]
        type => "mt"
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_wwgl"
        codec => "plain"
        fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
	partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
        topics => ["wwgl"]
        type => "wwgl"
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_hdproject-pms"
        codec => "plain"
        fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
        partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
        topics => ["hdproject-pms"]
        type => "hdproject-pms"
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_ccp"
        codec => "plain"
        fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
        partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
        topics => ["ccp_cooperate"]
        type => "ccp_cooperate"
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_htwb"
        codec => "plain"
        fetch_max_bytes => "10485760"
        auto_offset_reset => "latest"
        partition_assignment_strategy => "org.apache.kafka.clients.consumer.RoundRobinAssignor"
        consumer_threads => 4
        decorate_events => true
        topics => ["htwb_test"]
        type => "htwb_test"
    }
}

filter {
	if [type] == "idr-attendance" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-apartment" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-dfs" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-gateway" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-sign" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-record" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-zuul" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-user" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-device" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-zipkin" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-eureka" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "mms-sync" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "mms-admin" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "meet-test" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "xmas-html-test" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
        if [type] == "hd-material-h5" {
                grok {  
                        patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
                        match => {
                                "message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                        }
                        overwrite => ["message"]
                }
                mutate {        
                                gsub => ["message","\\n","
"]                              
                                gsub => ["message","\\t","      "]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
                                remove_field => "timestamp"
                                remove_field => "@version"
                                remove_field => "text_format"
                        }
                date {
                        match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
                }
        }
        if [type] == "mt" {
                grok {  
                        patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
                        match => {
                                "message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                        }
                        overwrite => ["message"]
                }
                mutate {        
                                gsub => ["message","\\n","
"]                              
                                gsub => ["message","\\t","      "]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
                                remove_field => "timestamp"
                                remove_field => "@version"
                                remove_field => "text_format"
                        }
                date {
                        match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
                }
        }
        if [type] == "wwgl" {
                grok {  
                        patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
                        match => {
                                "message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                        }
                        overwrite => ["message"]
                }
                mutate {        
                                gsub => ["message","\\n","
"]                              
                                gsub => ["message","\\t","      "]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
                                remove_field => "timestamp"
                                remove_field => "@version"
                                remove_field => "text_format"
                        }
                date {
                        match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
                }
        }
        if [type] == "hdproject-pms" {
                grok {
                        patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
                        match => {
                                "message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                        }
                        overwrite => ["message"]
                }
                mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","      "]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
                                remove_field => "timestamp"
                                remove_field => "@version"
                                remove_field => "text_format"
                        }
                date {
                        match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
                }
        }
        if [type] == "ccp_cooperate" {
                grok {
                        patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
                        match => {
                                "message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                        }
                        overwrite => ["message"]
                }
                mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","      "]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
                                remove_field => "timestamp"
                                remove_field => "@version"
                                remove_field => "text_format"
                        }
                date {
                        match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
                }
        }
        if [type] == "htwb_test" {
                grok {
                        patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
                        match => {
                                "message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                        }
                        overwrite => ["message"]
                }
                mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","      "]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
                                remove_field => "timestamp"
                                remove_field => "@version"
                                remove_field => "text_format"
                        }
                date {
                        match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
                }
        }
}


output {
	 if [type] == "idr-attendance" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-attendance_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-apartment" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-apartment_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-dfs" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-dfs_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-gateway" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-gateway_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-sign" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-sign_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-record" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-record_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-zuul" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-zuul_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-user" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-user_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-device" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-device_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-zipkin" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-zipkin_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-eureka" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-eureka_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "mms-sync" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "mms-sync_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "mms-admin" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "mms-admin_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "meet-test" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "meet-test_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "xmas-html-test" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "xmas-html-test_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
         if [type] == "hd-material-h5" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "hd-material-h5_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
         if [type] == "mt" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "mt_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
         if [type] == "wwgl" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "wwgl_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
         if [type] == "hdproject-pms" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "hdproject-pms_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
         if [type] == "ccp_cooperate" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "ccp_cooperate_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
         if [type] == "htwb_test" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "htwb_test_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
}

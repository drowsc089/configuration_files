input {
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-attendance"]
	type => "idr-attendance" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-apartment"]
	type => "idr-apartment" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-dfs"]
	type => "idr-dfs" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-gateway"]
	type => "idr-gateway" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-sign"]
	type => "idr-sign" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-record"]
	type => "idr-record" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-zuul"]
	type => "idr-zuul" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-user"]
	type => "idr-user" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-device"]
	type => "idr-device" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-zipkin"]
	type => "idr-zipkin" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_idr"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["idr-eureka"]
	type => "idr-eureka" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_mms"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["mms-sync"]
	type => "mms-sync" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_mms"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["mms-admin"]
	type => "mms-admin" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_meet"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["meet-test"]
	type => "meet-test" 
    }
    kafka {
        bootstrap_servers => ["192.168.145.109:9092,192.168.145.110:9092,192.168.145.111:9092"]
        client_id => "ELKlogstash01"
        group_id => "HDPRO_ELK_JAVA_xmas-html"
	codec => "plain"
	fetch_max_bytes => "104857600"
        auto_offset_reset => "latest"
        consumer_threads => 10
        decorate_events => true
	topics => ["xmas-html-test"]
	type => "xmas-html-test" 
    }
}

filter {
	if [type] == "idr-attendance" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-apartment" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-dfs" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-gateway" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-sign" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-record" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-zuul" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-user" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-device" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-zipkin" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "idr-eureka" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "mms-sync" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "mms-admin" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "meet-test" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
	if [type] == "xmas-html-test" {
        	grok {
            		patterns_dir => ["/data/ELK/logstash/config/pattern/JavaProdlog"]
            		match => {
                		"message" => ["%{JAVAAPPLOG}","%{ANY:message}"]
                	}
            		overwrite => ["message"]
    		}
		mutate {
                                gsub => ["message","\\n","
"]
                                gsub => ["message","\\t","	"]
                                gsub => ["message","\\u001b\[m",""]
                                gsub => ["message","\\u001b\[1\;31m",""]
				remove_field => "timestamp"
				remove_field => "@version"
				remove_field => "text_format"
                        }
		date {
			match => ["timestamp","yyyy-MM-dd HH:mm:ss.SSS"]
		}
	}
}

output {
	 if [type] == "idr-attendance" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-attendance_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-apartment" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-apartment_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-dfs" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-dfs_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-gateway" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-gateway_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-sign" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-sign_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-record" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-record_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-zuul" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-zuul_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-user" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-user_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-device" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-device_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-zipkin" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-zipkin_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "idr-eureka" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "idr-eureka_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "mms-sync" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "mms-sync_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "mms-admin" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "mms-admin_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "meet-test" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "meet-test_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
	 if [type] == "xmas-html-test" {
         elasticsearch {
            hosts => ["192.168.193.154:9200","192.168.193.155:9200","192.168.193.156:9200"]
            index => "xmas-html-test_%{+YYYY.MM.dd}"
            user => "elastic"
            password => "${ES_PWD}"
         }
    }
}
